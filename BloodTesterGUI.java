/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bloodtestscheduler;

import java.util.LinkedList;
import java.util.Queue;
import javax.swing.JOptionPane;


/**
 *
 * @author Conno
 */
public class BloodTesterGUI extends javax.swing.JFrame {
    private PQManager priorityQueue;
    private Queue<TesterApplicant> noShowQueue = new LinkedList<>(); // Track last 5 no-shows
    private LinkedList<TesterApplicant> allPatients = new LinkedList<>(); // List of all patients

    /**
     * Creates new form BloodTesterGUI
     */
    public BloodTesterGUI() {
        priorityQueue = new PQManager();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        wardBg = new javax.swing.ButtonGroup();
        titleLbl = new javax.swing.JLabel();
        nameLbl = new javax.swing.JLabel();
        dobLbl = new javax.swing.JLabel();
        priorityLbl = new javax.swing.JLabel();
        gpDetailsLbl = new javax.swing.JLabel();
        wardLbl = new javax.swing.JLabel();
        nextBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        queueBtn = new javax.swing.JButton();
        nameTf = new javax.swing.JTextField();
        priorityTf = new javax.swing.JTextField();
        dobTf = new javax.swing.JTextField();
        gpDetailsTf = new javax.swing.JTextField();
        yesRb = new javax.swing.JRadioButton();
        noRb = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        queueTa = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titleLbl.setText("Schedule for bloods test.");

        nameLbl.setText("Name:");

        dobLbl.setText("DOB:");

        priorityLbl.setText("Priority:");

        gpDetailsLbl.setText("GP deatails:");

        wardLbl.setText("Are you coming from the hospital ward?:");

        nextBtn.setText("Next App");

        addBtn.setText("Add App");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        queueBtn.setText("Show Queue");
        queueBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                queueBtnActionPerformed(evt);
            }
        });

        gpDetailsTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gpDetailsTfActionPerformed(evt);
            }
        });

        wardBg.add(yesRb);
        yesRb.setText("Yes");

        wardBg.add(noRb);
        noRb.setText("No");

        queueTa.setColumns(20);
        queueTa.setRows(5);
        jScrollPane1.setViewportView(queueTa);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(wardLbl)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(priorityLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(priorityTf, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(nameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(nameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(dobLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(dobTf, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(gpDetailsLbl)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(gpDetailsTf, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(yesRb, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(noRb, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addBtn)
                                .addGap(18, 18, 18)
                                .addComponent(nextBtn)
                                .addGap(18, 18, 18)
                                .addComponent(queueBtn))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(titleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dobLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dobTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priorityLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priorityTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gpDetailsLbl)
                            .addComponent(gpDetailsTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(wardLbl))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(yesRb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(noRb)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBtn)
                    .addComponent(queueBtn)
                    .addComponent(nextBtn))
                .addGap(53, 53, 53))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void gpDetailsTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gpDetailsTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gpDetailsTfActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
         try {
            String sName = nameTf.getText();
            String sDob = dobTf.getText();  
            String sPriority = priorityTf.getText().trim();
            String sGpDetails = gpDetailsTf.getText();
            boolean isWardPat = yesRb.isSelected();

            // Validate priority input
            if (!sPriority.equalsIgnoreCase("Urgent") && !sPriority.equalsIgnoreCase("Medium") && !sPriority.equalsIgnoreCase("Low")) {
                JOptionPane.showMessageDialog(this, "Invalid priority! Please enter 'Urgent', 'Medium', or 'Low'.", "Input Error", JOptionPane.ERROR_MESSAGE); //this will show if urgent, medium or low is not enetered.
                return;
            }

            // Convert DOB to age for the priority queue
            int age = calculateAge(sDob);

            // Create a new TesterApplicant object
            TesterApplicant newPatient = new TesterApplicant(sName, age, sPriority, sGpDetails, isWardPat);

            // Add patient to the queue
            priorityQueue.enqueue(newPatient);

            // Display message
            queueTa.append(sName + " (" + age + " yrs, " + sPriority + ") was added to the queue.\n");

            // Clear input fields
            nameTf.setText("");
            dobTf.setText("");
            priorityTf.setText(""); // Clear the priority field
            gpDetailsTf.setText("");
            yesRb.setSelected(false);
            noRb.setSelected(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Invalid input. Please check fields.", "Input Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addBtnActionPerformed

    private void queueBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_queueBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_queueBtnActionPerformed

    
    private int calculateAge(String dob) {
        // Simple placeholder for age calculation (use real logic as needed)
        return 25;  // Placeholder for age calculation
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BloodTesterGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BloodTesterGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BloodTesterGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BloodTesterGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BloodTesterGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JLabel dobLbl;
    private javax.swing.JTextField dobTf;
    private javax.swing.JLabel gpDetailsLbl;
    private javax.swing.JTextField gpDetailsTf;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JTextField nameTf;
    private javax.swing.JButton nextBtn;
    private javax.swing.JRadioButton noRb;
    private javax.swing.JLabel priorityLbl;
    private javax.swing.JTextField priorityTf;
    private javax.swing.JButton queueBtn;
    private javax.swing.JTextArea queueTa;
    private javax.swing.JLabel titleLbl;
    private javax.swing.ButtonGroup wardBg;
    private javax.swing.JLabel wardLbl;
    private javax.swing.JRadioButton yesRb;
    // End of variables declaration//GEN-END:variables
}
